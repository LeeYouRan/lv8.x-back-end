<?php
// +----------------------------------------------------------------------
// | RXThinkCMF_EVL8_PRO前后端分离旗舰版框架 [ RXThinkCMF ]
// +----------------------------------------------------------------------
// | 版权所有 2021 南京RXThinkCMF研发中心
// +----------------------------------------------------------------------
// | 官方网站: http://www.rxthink.cn
// +----------------------------------------------------------------------
// | 作者: 牧羊人 <rxthinkcmf@163.com>
// +----------------------------------------------------------------------
// | 免责声明:
// | 本软件框架禁止任何单位和个人用于任何违法、侵害他人合法利益等恶意的行为，禁止用于任何违
// | 反我国法律法规的一切平台研发，任何单位和个人使用本软件框架用于产品研发而产生的任何意外
// | 、疏忽、合约毁坏、诽谤、版权或知识产权侵犯及其造成的损失 (包括但不限于直接、间接、附带
// | 或衍生的损失等)，本团队不承担任何法律责任。本软件框架只能用于公司和个人内部的法律所允
// | 许的合法合规的软件产品研发，详细声明内容请阅读《框架免责声明》附件；
// +----------------------------------------------------------------------

namespace App\Services;

use App\Models\MenuModel;
use App\Models\RoleMenuModel;
use App\Models\RoleModel;

/**
 * 角色管理-服务类
 * @author 牧羊人
 * @since 2020/11/11
 * Class RoleService
 * @package App\Services
 */
class RoleService extends BaseService
{
    /**
     * 构造函数
     * @author 牧羊人
     * @since 2020/11/11
     * RoleService constructor.
     */
    public function __construct()
    {
        $this->model = new RoleModel();
    }

    /**
     * 获取数据列表
     * @return array
     * @since 2021/10/23
     * @author 牧羊人
     */
    public function getList()
    {
        return parent::getList([], [['sort', 'asc']]); // TODO: Change the autogenerated stub
    }

    /**
     * 获取角色列表
     * @return array
     * @since 2020/11/11
     * @author 牧羊人
     */
    public function getRoleList()
    {
        $list = $this->model->where([
            ['status', '=', 1],
            ['mark', '=', 1],
        ])->orderBy("sort", "asc")
            ->get()
            ->toArray();
        return message("操作成功", true, $list);
    }

    /**
     * 获取角色权限列表
     * @return mixed
     * @since 2020/11/11
     * @author 牧羊人
     */
    public function getPermissionList()
    {
        // 请求参数
        $param = request()->all();
        // 角色ID
        $roleId = intval(getter($param, "role_id", 0));
        // 获取全部菜单
        $menuModel = new MenuModel();
        $menuList = $menuModel->where([
//            ['status', '=', 1],
            ['mark', '=', 1],
        ])->orderBy("sort", "asc")->get()->toArray();
        if (!empty($menuList)) {
            $roleMenuModel = new RoleMenuModel();
            $roleMenuList = $roleMenuModel->where("role_id", $roleId)->get("menu_id")->toArray();
            $menuIdList = array_key_value($roleMenuList, "menu_id");
            foreach ($menuList as &$val) {
                if (in_array($val['id'], $menuIdList)) {
                    $val['checked'] = true;
                    $val['open'] = true;
                }
            }
        }
        return message(MESSAGE_OK, true, $menuList);
    }

    /**
     * 保存角色菜单权限数据
     * @return array
     * @since 2020/11/11
     * @author 牧羊人
     */
    public function savePermission()
    {
        // 请求参数
        $param = request()->all();
        // 角色ID
        $roleId = intval(getter($param, "role_id", 0));
        if (!$roleId) {
            return message("角色ID不能为空", false);
        }

        // 删除角色菜单关系数据
        $roleMenuModel = new RoleMenuModel();
        $roleMenuModel->where("role_id", $roleId)->delete();

        // 插入角色菜单关系数据
        $menuIds = isset($param["menu_id"]) ? $param["menu_id"] : [];
        $list = [];
        if (is_array($menuIds) && !empty($menuIds)) {
            foreach ($menuIds as $val) {
                $data = [
                    'role_id' => $roleId,
                    'menu_id' => $val,
                ];
                $list[] = $data;
            }
        }
        $roleMenuModel->insert($list);
        return message();
    }

}
